[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "x + 1"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "LaughingRook",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Modified - Oldest\n        \n         \n          Modified - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nPlot The Probability Density Function Of A Continuous Random Vaiable\n\n\n\n\n\n\n\nProbability\n\n\nVisualisation\n\n\n \n\n\n\n\nJan 14, 2023\n\n\n1/14/23, 8:20:21 AM\n\n\n\n\n\n\n\n\nPlot The Probability Mass Function Of A Discrete Random Vaiable\n\n\n\n\n\n\n\nProbability\n\n\nVisualisation\n\n\n \n\n\n\n\nJan 14, 2023\n\n\n1/14/23, 8:17:52 AM\n\n\n\n\n\n\n\n\nModel A Continuous Random Variable\n\n\n\n\n\n\n\nM343\n\n\nProbability\n\n\n \n\n\n\n\nJan 13, 2023\n\n\n1/13/23, 6:27:28 PM\n\n\n\n\n\n\n\n\nModel A Discrete Random Variable\n\n\n\n\n\n\n\nM343\n\n\nProbability\n\n\n \n\n\n\n\nJan 12, 2023\n\n\n1/13/23, 6:27:31 PM\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/20230112-modelling_discrete_rvs.html",
    "href": "posts/20230112-modelling_discrete_rvs.html",
    "title": "Model A Discrete Random Variable",
    "section": "",
    "text": "We would like to model a discrete random variable (rv) that is distributed by a non-standard probability distribution."
  },
  {
    "objectID": "posts/20230112-modelling_discrete_rvs.html#solution",
    "href": "posts/20230112-modelling_discrete_rvs.html#solution",
    "title": "Model A Discrete Random Variable",
    "section": "Solution",
    "text": "Solution\nWe model it using SciPy’s rv_discrete class."
  },
  {
    "objectID": "posts/20230112-modelling_discrete_rvs.html#example",
    "href": "posts/20230112-modelling_discrete_rvs.html#example",
    "title": "Model A Discrete Random Variable",
    "section": "Example",
    "text": "Example\nLet \\(X\\) be a discrete rv that has the p.m.f.\n\n\n\n\\(x\\)\n0\n1\n2\n3\n4\n\n\n\n\n\\(p(x)\\)\n0.1\n0.2\n0.4\n0.2\n0.1\n\n\n\nImport the depedencies.\n\nfrom scipy import stats as st\n\nTo initialise an instance of rv_discrete, we require both the event space and the probability associated with each event.\nLet xk and pk be the event space and probability of each event, such that for P(xk[i]) = pk[i], i ∈ [0, 1, 2, 3, 4].\n\nxk = tuple([*range(5)])\npk = tuple([0.1, 0.2, 0.4, 0.2, 0.1])\n\nInitialise rv, an instance rv_discrete, passing (xk, pk) as an actual argument for the values parameter.\n\nrv = st.rv_discrete(values=(xk, pk))"
  },
  {
    "objectID": "posts/20230113-modelling_cts_rvs.html",
    "href": "posts/20230113-modelling_cts_rvs.html",
    "title": "Model A Continuous Random Variable",
    "section": "",
    "text": "We would like to model a continuous random variable (rv) that is distributed by a non-standard probability distribution."
  },
  {
    "objectID": "posts/20230113-modelling_cts_rvs.html#solution",
    "href": "posts/20230113-modelling_cts_rvs.html#solution",
    "title": "Model A Continuous Random Variable",
    "section": "Solution",
    "text": "Solution\nWe model it declaring a new class that inherits from SciPy’s rv_continuous class that overrides the _pdf method."
  },
  {
    "objectID": "posts/20230113-modelling_cts_rvs.html#example",
    "href": "posts/20230113-modelling_cts_rvs.html#example",
    "title": "Model A Continuous Random Variable",
    "section": "Example",
    "text": "Example\nLet \\(T\\) be a continuous rv that has p.d.f.,\n\\[\nf(t) = \\frac{t}{48}, \\enspace 2 \\le t \\le 10.\n\\]\nImport the dependencies.\n\nfrom scipy import stats as st\n\nDeclare a new subclass of rv_continuous, and override the _pdf method.\n\n\n\n\n\n\nNote\n\n\n\nWe override the constructor here because \\(T\\) is bounded.\nIf it was unbounded, then we do not need to override the constructor.\n\n\n\nclass t_gen(st.rv_continuous):\n    def __init__(self):\n        super().__init__(a=2, b=10)\n\n    def _pdf(self, t):\n        return t / 48\n\nInitialise t, an instance t_gen.\n\nt = t_gen()"
  },
  {
    "objectID": "posts/20230114-plot_pdf_cts_rv.html",
    "href": "posts/20230114-plot_pdf_cts_rv.html",
    "title": "Plot The Probability Density Function Of A Continuous Random Vaiable",
    "section": "",
    "text": "We have a continuous random variable whose p.d.f. we would like to visualise."
  },
  {
    "objectID": "posts/20230114-plot_pdf_cts_rv.html#solution",
    "href": "posts/20230114-plot_pdf_cts_rv.html#solution",
    "title": "Plot The Probability Density Function Of A Continuous Random Vaiable",
    "section": "Solution",
    "text": "Solution\nWe can use the fuction below to produce a line chart of the p.d.f.\n\n\n\n\n\n\nWarning\n\n\n\nThis requires seaborn >= 0.12.\n\n\n\nplot_pdf(rv: rv_continuous) -> so.Plot\n\n\nimport numpy as np\nfrom scipy import stats as st\nfrom seaborn import objects as so\n\n\ndef plot_pdf(rv) -> so.Plot:\n    \"\"\"Plot the approximate probability distribution of T, the waiting\n    time between events.\n    \"\"\"\n    xs = np.linspace(rv.ppf(0.005), rv.ppf(0.995), num=100)\n    return(\n        so.Plot(x=xs, y=rv.pdf(xs))\n        .add(so.Line())\n        .label(x='x', y='f(x)', title='Probability distribution')\n    )"
  },
  {
    "objectID": "posts/20230114-plot_pdf_cts_rv.html#examples",
    "href": "posts/20230114-plot_pdf_cts_rv.html#examples",
    "title": "Plot The Probability Density Function Of A Continuous Random Vaiable",
    "section": "Examples",
    "text": "Examples\n\nplot_pdf(st.norm())\n\n\n\n\n\nplot_pdf(st.gamma(2, 5))"
  },
  {
    "objectID": "posts/20230114-plot_pmf_discrete_rv.html",
    "href": "posts/20230114-plot_pmf_discrete_rv.html",
    "title": "Plot The Probability Mass Function Of A Discrete Random Vaiable",
    "section": "",
    "text": "We have a discrete random variable whose p.m.f. we would like to visualise."
  },
  {
    "objectID": "posts/20230114-plot_pmf_discrete_rv.html#solution",
    "href": "posts/20230114-plot_pmf_discrete_rv.html#solution",
    "title": "Plot The Probability Mass Function Of A Discrete Random Vaiable",
    "section": "Solution",
    "text": "Solution\nWe can use the fuction below to produce a bar chart of the p.m.f.\n\n\n\n\n\n\nWarning\n\n\n\nThis requires seaborn >= 0.12.\n\n\n\nplot_pmf(rv: rv_discrete, step: int = 1) -> Plot\n\n\nimport numpy as np\nfrom scipy import stats as st\nfrom seaborn import objects as so\n\n\ndef plot_pmf(rv, step=1):\n    \"\"\"Plot the pmf of the given rv as a bar chart.\n\n    Pass step to reduce the number of x-axis tick labels.\n    This is useful if the x-axis appears particularly cluttered.\n    \"\"\"\n    xs = np.arange(rv.ppf(0.005), rv.ppf(0.995)+1, dtype=int)\n    return (\n        so.Plot(x=xs, y=rv.pmf(xs))\n        .add(so.Bar())\n        .scale(x=so.Continuous().tick(every=step))\n        .label(x='x', y='p(x)', title='Probability distribution')\n    )"
  },
  {
    "objectID": "posts/20230114-plot_pmf_discrete_rv.html#examples",
    "href": "posts/20230114-plot_pmf_discrete_rv.html#examples",
    "title": "Plot The Probability Mass Function Of A Discrete Random Vaiable",
    "section": "Examples",
    "text": "Examples\nUsing the default step.\n\nplot_pmf(st.poisson(10))\n\n\n\n\nUsing a custom step.\n\nplot_pmf(st.geom(0.1), step=5)"
  }
]